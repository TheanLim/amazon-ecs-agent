// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//	http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

package acsclient

import (
	"github.com/aws/amazon-ecs-agent/ecs-agent/acs/model/ecsacs"
	"github.com/aws/amazon-ecs-agent/ecs-agent/wsclient"

	"github.com/aws/aws-sdk-go-v2/service/acs"
	"github.com/aws/aws-sdk-go-v2/service/acs/types"
)

var acsRecognizedTypes []interface{}

func init() {
	// This list is currently *manually updated* and assumes that the generated
	// struct type-names within the package *exactly match* the type sent by ACS/TCS
	// (true so far; careful with inflections)
	// TODO, this list should be autogenerated
	// I couldn't figure out how to get a list of all structs in a package via
	// reflection, but that would solve this. The alternative is to either parse
	// the .json model or the generated struct names.
	acsRecognizedTypes = []interface{}{
		acs.HeartbeatInput{},
		acs.HeartbeatOutput{},
		acs.PayloadInput{},
		acs.PollOutput{},
		ecsacs.AckRequest{},
		acs.UpdateFailureInput{},
		acs.PerformUpdateInput{},
		acs.StageUpdateInput{},
		acs.RefreshTaskIAMRoleCredentialsInput{},
		acs.RefreshTaskIAMRoleCredentialsOutput{},
		types.ServerException{},
		types.BadRequestException{},
		types.InvalidClusterException{},
		types.InvalidInstanceException{},
		types.AccessDeniedException{},
		types.InactiveInstanceException{},
		acs.ErrorInput{},
		acs.AttachTaskNetworkInterfacesInput{},
		acs.AttachInstanceNetworkInterfacesInput{},
		acs.ConfirmAttachmentInput{},
		acs.TaskManifestInput{},
		acs.TaskStopVerificationOutput{},
		acs.TaskStopVerificationInput{},
	}
}

func NewACSDecoder() wsclient.TypeDecoder {
	return wsclient.BuildTypeDecoder(acsRecognizedTypes)
}
